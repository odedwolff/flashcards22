extends slvk_stat_layout

block sl_stt_layout-content
    h1 stats text input  
    textarea(id='textBox1' name="Text1" cols="40" rows="5")
    button(onclick="sendAjaxTest2()" disabled) update stat
    button(id = 'buttonLoadScore' onclick="testLoadScore()") test load score
    button(id='buttonSelNext' onclick="testSelectNextWord()") test select next
    button(onclick="testUpdateScore()" disabled) test update score
    button(onclick="testStoredProc2()" disabled) test store proc 2
    h1 next word 
    div
        label do you know the meaning of 
        label(id="labelQ") "question here..."
    div
        label(id="labelA") "answer here..."
    button(onclick="handleShowTrx()" id="buttonShowTrx") show translation
    button(onclick="updateCorrect(true)" id="buttonYes") yes
    button(onclick="updateCorrect(false)" id="buttonNo") no

    script(type="text/javascript").
        var curWrod = {
            word:'...', 
            id:null, 
        }

        function handler1(){
            console.log("handler");
        }
        function sendAjaxTest(){
            const URL_ORG = 'http://example.com/movies.json';
            const URL = '/testAjax';
            text = document.getElementById("textBox1").value;
            fetch(URL, 
                { method: 'POST',
                  data:{
                      key1:'val1',
                      key2:5053,
                      text:text
                  }
                })
                .then(function(response) {
                    return response.json();
            });
        }

        

        function sendAjaxTest2(){
            rawText = document.getElementById("textBox1").value;
            
            var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
            xmlhttp.open("POST", "/testAjax");
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            var counter = count(rawText);
            xmlhttp.send(JSON.stringify({name:"John Rambo", time:"2pm", text:rawText, counter: counter}));
        }


        function testLoadScore(){
            var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
            xmlhttp.open("POST", "/testLoadScore");
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            xmlhttp.onreadystatechange = function() { // Call a function when the state changes.
             if (this.readyState === XMLHttpRequest.DONE && this.status === 200)
                 {
                    enableButSelNext(true);
                    enableShowLoadScoreButton(false);
                    console.log('init info loaded');
                 }
                else    
                    {
                         if(this.status != 200)
                             console.log(`problem in update status= ${this.status}`);
                    }
            }
            xmlhttp.send();
        }


        function testUpdateScore(){
            var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
            xmlhttp.open("POST", "/testUpdateScore");
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            xmlhttp.send();
        }


        function testStoredProc2(){
            var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
            xmlhttp.open("POST", "/testUpdateScoreStoredP");
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            xmlhttp.send();
        }


                 
        function testSelectNextWord(){
            hideAnswer();
            clearQ();
            clearA();
            enableShowTrx(false);
           
            
            var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
            xmlhttp.open("POST", "/testSelectNextWord");
            xmlhttp.setRequestHeader("Content-Type", "application/json");


            xmlhttp.onreadystatechange = function() { // Call a function when the state changes.
                    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                       // console.log(`response ready state= ${JSON.stringify(this.readyState)}`);
                        console.log(`response ready state= ${this.response}`);
                        var parsed = JSON.parse(this.response);
                        curWrod.word = parsed.selectedWordInfo.word;
                        curWrod.translation= parsed.selectedWordInfo.translation;
                        curWrod.id = parsed.selectedWordInfo.id;
                        console.log(`retreived word =${curWrod.word}`);
                        document.getElementById('labelQ').innerHTML = curWrod.word;
                        document.getElementById('labelA').innerHTML = curWrod.translation;
                         // Request finished. Do processing here.
                        enableShowTrx(true);
                    }
            }


            xmlhttp.send();
        }


        function count(rawText){
            const words = rawText.split(" ");
            var counter ={};
            for (var i = 0 ; i < words.length;i++){
                key = words[i];
                if(key in counter){
                    counter[key]++
                }else{
                     counter[key] = 1;
                }

                //console.log(wrods[i] + "\n" + i);
            }
            console.log(`wrods count: ${counter}`);
            return counter; 
        }   

        function enableCorrectButtons(flag){
            const buttonYes =  document.getElementById('buttonYes');
            const buttonNo =  document.getElementById('buttonNo');
            buttonYes.disabled = !flag;
            buttonNo.disabled = !flag;
        }

        function showAnswer(){
             setAnswerVisible(true);
        };
        function hideAnswer(){
             setAnswerVisible(false);
        };

        function setAnswerVisible(flag){
            document.getElementById('labelA').hidden = !flag;
        }  

        function clearQ(){
            document.getElementById('labelQ').innerHTML = "";
        }  

        function clearA(){
            document.getElementById('labelA').innerHTML = ""; 
        }

        function enableShowTrx(flag){
            document.getElementById('buttonShowTrx').disabled = !flag; 
        }

        function enableButSelNext(flag){
            document.getElementById('buttonSelNext').disabled = !flag; 
            
        }

        function enableShowLoadScoreButton(flag){
            document.getElementById('buttonLoadScore').disabled = !flag; 
            
        }

        


        function handleShowTrx(){
            enableShowTrx(false);
            enableCorrectButtons(true);
            showAnswer();
        }

        function initUI(){
            enableCorrectButtons(false);
            enableShowTrx(false);
            enableButSelNext(false);
        }



        function updateCorrect(flag){
            enableCorrectButtons(false);
            var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
            xmlhttp.open("POST", "/updateCorrect");
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            xmlhttp.onreadystatechange = function() { // Call a function when the state changes.
             if (this.readyState === XMLHttpRequest.DONE && this.status === 200)
                 {
                    console.log('update complete')
                 }
                else    
                    {
                        if(this.status != 200)
                             console.log(`problem in update status= ${this.status}`);
                    }
            }
            xmlhttp.send(JSON.stringify({wordId:curWrod.id , correct:flag}));
        }

        window.onload = function(){
            console.log("doc.ready()");
            initUI();
        }


        





    